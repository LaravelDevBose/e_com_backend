<?php

namespace App\Models;

use App\Traits\ManipulateBy;
use Illuminate\Database\Eloquent\Model;

class Campaign extends Model
{
    use ManipulateBy;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
//        ManipulateBy::bootManipulateBy();
    }

    const DiscountType =[
        1=>'Fixed',
        2=>'Percent'
    ];

    const Status=[
        'Delete'=>0,
        'Active'=>1,
        'Inactive'=>2,
        'Live'=>3,
        'Expired'=>4,
    ];

    const ADDS_POSITION=[
        0=>'Select a Position',
        1=>'Home Page Top (600X50)'
    ];


    protected $table = 'campaigns';

    protected $primaryKey =  'campaign_id';

    protected $fillable = [
        'campaign_title',
        'campaign_slug',
        'campaign_start',
        'campaign_end',
        'camp_reg_date',
        'campaign_details',
        'seller_pro_limit',
        'campaign_rules',
        'total_product',
        'adds_attachment_id',
        'adds_position',
        'attachment_id',
        'campaign_status',
    ];


    public function scopeIsActive($query){
        return $query->where('campaign_status', Self::Status['Active']);
    }

    public function scopeInactive($query){
        return $query->where('campaign_status', Self::Status['Inactive']);
    }

    public function scopeNotDelete($query){
        return $query->where('campaign_status', '!=', Self::Status['Delete']);
    }

    public function scopeIsLive($query){
        return $query->where('campaign_status', Self::Status['Live']);
    }

    public function scopeIsExpired($query){
        return $query->where('campaign_status', Self::Status['Expired']);
    }


    public function attachment(){
        return $this->hasOne(Attachment::class,'attachment_id', 'attachment_id')->where('folder', 'campaign');
    }

    public function campaign_products(){
        return $this->hasMany(CampaignProduct::class, 'campaign_id', 'campaign_id');
    }

    public function addsImage(){
        return $this->hasOne(Attachment::class,'attachment_id', 'adds_attachment_id')->where('folder', 'campaign');
    }
}
